cd code
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runGitHub("rhandsontable", "jrowen", subdir = "inst/examples/rhandsontable_corr")
install.packages("metricsgraphics")
shiny::runGitHub("rhandsontable", "jrowen", subdir = "inst/examples/rhandsontable_corr")
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runGitHub("rhandsontable", "jrowen", subdir = "inst/examples/rhandsontable_portfolio")
install.packages("dygraphs")
shiny::runGitHub("rhandsontable", "jrowen", subdir = "inst/examples/rhandsontable_portfolio")
install.packages("data.table")
shiny::runGitHub("rhandsontable", "jrowen", subdir = "inst/examples/rhandsontable_portfolio")
install.packages("quantmod")
shiny::runGitHub("rhandsontable", "jrowen", subdir = "inst/examples/rhandsontable_portfolio")
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
(1 | 2)
(1 | 2 > 9)
(1 > 3)
(1 > 3 | 2 < 4)
(1 > 3 & 2 < 4)
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runGitHub("rhandsontable", "jrowen", subdir = "inst/examples/rhandsontable_output")
shiny::runGitHub("rhandsontable", "jrowen", subdir = "inst/examples/rhandsontable_frontier")
install.packages("lpSolve")
shiny::runGitHub("rhandsontable", "jrowen", subdir = "inst/examples/rhandsontable_frontier")
install.packages("quadprog")
shiny::runGitHub("rhandsontable", "jrowen", subdir = "inst/examples/rhandsontable_frontier")
shiny::runApp('APRON/triangle')
install_github("shinyTable", "trestletech")
library(devtools)
install_github("shinyTable", "trestletech")
runApp(system.file("examples/01-simple", package="shinyTable"))
runApp(system.file("examples/01-simple", package="shinyTable"))
shiny::runGitHub("shinyTable", "trestletech", subdir = "inst/examples/01-simple")
shiny::runGitHub("shinyTable", "trestletech", subdir = "inst/examples/02-matrix")
shiny::runGitHub("shinyTable", "trestletech", subdir = "inst/examples/03-click-input")
letters[1:10]
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
library("markdown", lib.loc="~/R/x86_64-unknown-linux-gnu-library/3.1")
library("rmarkdown", lib.loc="~/R/x86_64-unknown-linux-gnu-library/3.1")
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runGitHub("rhandsontable", "jrowen", subdir = "inst/examples/rhandsontable_corr")
shiny::runGitHub("rhandsontable", "jrowen", subdir = "inst/examples/rhandsontable_datafile")
shiny::runGitHub("rhandsontable", "jrowen", subdir = "inst/examples/rhandsontable_output")
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
View(plotit)
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
library(shiny)
library(ggtern)
library(gridSVG)
library(svgPanZoom)
library(SVGAnnotation)
library(rhandsontable)
library(tools)
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
runGitHub('paulgovan/eAnalytics')
require(shiny)
runGitHub('paulgovan/eAnalytics')
shiny::runApp('APRON/triangle')
library(shiny)
library(ggtern)
library(gridSVG)
library(svgPanZoom)
library(SVGAnnotation)
library(rhandsontable)
library(tools)
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
library(shiny)
library(ggtern)
library(gridSVG)
library(svgPanZoom)
library(SVGAnnotation)
library(rhandsontable)
library(tools)
library(shiny)
library(ggtern)
library(gridSVG)
library(svgPanZoom)
library(SVGAnnotation)
library(rhandsontable)
library(tools)
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
shiny::runApp('APRON/triangle')
install.packages("shinyBS")
setwd("~/APRON/triangle")
shiny::runApp()
shiny::runApp()
detach("package:shinyjs", unload=TRUE)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runif(10)
runif(1,10)
runif(10,min=1,max=16)
a<-runif(10,min=1,max=16)
what(a>8)
sample(1:100,4)
sample(1:100,4)
sample(1:100,4)
sample(1:100,4)
sample(1:100,4)
sample(1:100,4)
which(a>8)
a
shiny::runApp()
setwd("~/APRON/triangle/EQ_data")
a <- read.csv("EQC.csv")
a
ggplot(a,aes(x=Water,y=Ethelyne))
ggplot(a,aes(x=Water,y=Ethelyne)) + geom_point()
ggplot(a/100,aes(x=Water,y=Ethelyne)) + geom_point()
ggplot(a/100,aes(x=Water,y=Ethelyne)) + geom_point() + geom_line()
ggplot(a/100,aes(x=Water,y=Ethelyne)) + geom_point() + stat_smooth()
ggplot(a/100,aes(x=Water,y=Ethelyne)) + geom_point()
ggplot(a/100,aes(x=Water,y=Ethelyne)) + geom_point() + stat_smooth()
ggplot(a/100,aes(x=Water,y=Ethelyne)) + geom_point() + stat_smooth(se=0)
ggplot(a/100,aes(x=Water,y=Ethelyne)) + geom_point() + stat_smooth(se=0, method="loess")
ggplot(a/100,aes(x=Water,y=Ethelyne)) + geom_line() + stat_smooth(se=0, method="loess")
ggplot(a/100,aes(x=Water,y=Ethelyne)) + geom_line()
detach("package:SVGAnnotation", unload=TRUE)
shiny::runApp('~/APRON')
library(shiny)         # SHINY - Web interface
library(ggtern)        # Plotting ternary diagram
library(gridSVG)       # Converting Image to SVG
library(svgPanZoom)    # Pan and Zoom function
library(rhandsontable) # Table interface
library(tools)
library(plyr)
library(grid)
shiny::runApp('~/APRON')
source("bioconductor.org/biocLite.R")
